local a=game:GetService("Players")
local b=game:GetService("UserInputService")
local c=game:GetService("RunService")
local d=a.LocalPlayer
local e=workspace.CurrentCamera
local f,g={},{}
local h,i=false,false

local function j()
	g={}
	for _,k in pairs(workspace.Maps:GetChildren())do
		local l=k:FindFirstChild("Gameplay")
		local m=l and l:FindFirstChild("Buttons")
		if m then
			for _,n in pairs(m:GetChildren())do
				if n:IsA("Model")and n:FindFirstChild("Base")then
					table.insert(g,n.Base)
				end
			end
		end
	end
end

local function o()
	if h then return end
	h=true
	j()
	for _,p in ipairs(g)do
		if not f[p]then
			f[p]=true
			local q=d.Character or d.CharacterAdded:Wait()
			local r=q:FindFirstChild("HumanoidRootPart")
			if not r then continue end
			local s=p.Position
			local t=p.CFrame.LookVector.Unit*5
			local u=s+t+Vector3.new(0,3,0)
			r.CFrame=CFrame.new(u)
			c.RenderStepped:Wait()
			e.CFrame=CFrame.new(e.CFrame.Position,p.Position)
			task.wait(1)
		end
	end
	h=false
end

local function v()
	if i then return end
	i=true
	local w=d.Character or d.CharacterAdded:Wait()
	local x=w:FindFirstChild("HumanoidRootPart")
	if not x then i=false return end
	local y=nil
	while not y do
		for _,z in pairs(a:GetPlayers())do
			if z~=d and z.Character and z.Character:FindFirstChild("SurvivorHighlight")then
				y=z.Character
				break
			end
		end
		c.Heartbeat:Wait()
	end
	local A=y:FindFirstChild("HumanoidRootPart")
	if not A then i=false return end
	local B=x.CFrame
	local C=1
	local D=tick()
	local E
	E=c.RenderStepped:Connect(function()
		if tick()-D>=C then
			E:Disconnect()
			x.CFrame=B
			i=false
			return
		end
		if A and A.Parent then
			local F=A.CFrame.LookVector.Unit*-4+Vector3.new(0,2,0)
			x.CFrame=CFrame.new(A.Position+F)
		end
	end)
end

b.InputBegan:Connect(function(G,H)
	if H then return end
	local I=G.KeyCode
	if I==Enum.KeyCode.K then
		o()
	elseif I==Enum.KeyCode.J then
		v()
	end
end)
