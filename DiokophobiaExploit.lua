local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local plr = Players.LocalPlayer
local char = plr.Character or plr.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")

local visited = {}
local bases = {}
local started = false

local function collectBases()
	bases = {}
	for _, map in pairs(workspace.Maps:GetChildren()) do
		if map:FindFirstChild("Gameplay") and map.Gameplay:FindFirstChild("Buttons") then
			for _, model in pairs(map.Gameplay.Buttons:GetChildren()) do
				if model:IsA("Model") and model:FindFirstChild("Base") then
					table.insert(bases, model.Base)
				end
			end
		end
	end
end

local function teleportSequence()
	collectBases()

	for _, base in ipairs(bases) do
		if not visited[base] then
			visited[base] = true

			local basePos = base.Position
			local offset = base.CFrame.LookVector.Unit * 5
			local finalPos = basePos + offset + Vector3.new(0, 3, 0)

			-- Make the player face the base
			local lookCFrame = CFrame.new(finalPos, basePos)
			hrp.CFrame = lookCFrame

			task.wait(1)
		end
	end
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.K and not started then
		started = true
		teleportSequence()
	end
end)
